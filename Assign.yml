Parameters:
  KeyName1:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  KeyName2:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  KeyName3:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  InstanceType1:
    Description: Application for EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues: [t2.nano, t2.micro]
    ConstraintDescription: must be a valid EC2 instance type.
  InstanceType2:
    Description: application for EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues: [t2.nano, t2.micro]
    ConstraintDescription: must be a valid EC2 instance type.
  InstanceType3:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues: [t2.nano, t2.micro]
    ConstraintDescription: must be a valid EC2 instance type.
  SSHLocation1:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  SSHLocation2:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  SSHLocation3:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
Resources:
  EC2Instance1:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref 'InstanceType1'
      SecurityGroups: [!Ref 'InstanceSecurityGroup']
      KeyName: !Ref 'KeyName1'
      ImageId: ami-009110a2bf8d7dd0a
      Tags:
        - Key: Name
          Value: Application1
      UserData:
          Fn::Base64: 
              !Sub  |
                     #!/bin/bash -ex
                     apt update -y
                     apt install -y apache2
                     cd /var/www/html
                     rm index.html
                     echo "Hello, Welcome to Webpage1" > index.html					                                                           
  EC2Instance2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref 'InstanceType2'
      SecurityGroups: [!Ref 'InstanceSecurityGroup']
      KeyName: !Ref 'KeyName2'
      ImageId: ami-009110a2bf8d7dd0a
      Tags:
        - Key: Name
          Value: Application2
      UserData:
          Fn::Base64: 
              !Sub  |
                     #!/bin/bash -ex
                     apt update -y
                     apt install -y apache2
                     cd /var/www/html
                     rm index.html
                     echo "Hello, Welcome to Webpage2" > index.html		 
  EC2Instance3:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref 'InstanceType3'
      SecurityGroups: [!Ref 'InstanceSecurityGroup']
      KeyName: !Ref 'KeyName3'
      ImageId: ami-009110a2bf8d7dd0a
      Tags:
        - Key: Name
          Value: WebServer
      UserData:
          Fn::Base64: 
              !Sub  |
                     #!/bin/bash -ex
                     apt update -y
                     apt install -y nginx       
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref 'SSHLocation3'
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: !Ref 'SSHLocation3'
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "EC2 Instance configuration"
          Parameters:
          - instancetype
          - keyname
          - availabilityzone
  
       
